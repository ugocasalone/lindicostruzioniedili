---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';

interface Props {
  title: string;
  description?: string;
}

const { title, description = "Azienda di costruzioni specializzata in ristrutturazioni di case di campagna nel Monferrato. Offriamo servizi di ristrutturazione appartamenti, cascine, cemento armato, scavi e piscine." } = Astro.props;
---

<!doctype html>
<html lang="it">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title} | Costruzioni Monferrato</title>
    <ViewTransitions />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&family=Playfair+Display:wght@400;600;700&display=swap" rel="stylesheet">
  </head>
  <body class="font-sans text-gray-800 bg-primary-50 min-h-screen flex flex-col">
    <Header />
    <main class="flex-grow">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }

  body {
    overflow-x: hidden;
  }

  .reveal {
    opacity: 0;
    transform: translateY(40px);
  }

  .reveal.active {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }

  body::-webkit-scrollbar {
    width: 12px;
  }

  body::-webkit-scrollbar-track {
    background: #f8f6f4;
  }

  body::-webkit-scrollbar-thumb {
    background-color: #8c624c;
    border-radius: 6px;
    border: 3px solid #f8f6f4;
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('active');
        }
      });
    }, { threshold: 0.1 });

    document.querySelectorAll('.reveal').forEach(el => {
      observer.observe(el);
    });
  });
</script>